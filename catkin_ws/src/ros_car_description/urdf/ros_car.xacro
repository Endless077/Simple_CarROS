<?xml version="1.0"?>
<robot name="ros_car" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Local Params -->
  <xacro:property name="chassis_height" value="0.05"/>
  <xacro:property name="base_length" value="0.4"/>
  <xacro:property name="base_width" value="0.2"/>
  <xacro:property name="wheel_radius" value="0.05"/>
  <xacro:property name="wheel_width" value="0.02"/>
  <xacro:property name="wheel_separation" value="0.3"/>

  <!-- Materials -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>

  <material name="grey">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>

  <!-- Main Loom -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${chassis_height}"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2.0"/>
      <inertia ixx="0.1" ixy="0.0" ixz="0.0"
               iyy="0.1" iyz="0.0" izz="0.1"/>
    </inertial>
  </link>

  <!-- Scanner -->
  <link name="laser_link">
    <visual>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
               iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>

  <joint name="joint_laser_link" type="fixed">
    <parent link="base_link"/>
    <child link="laser_link"/>
    <origin xyz="0.2 0 0.05" rpy="0 0 0"/>
  </joint>

  <!-- Left Wheel -->
  <link name="wheel_left">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="black"/>
      <origin rpy="${pi/2} 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <origin rpy="${pi/2} 0 0"/>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
              iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>

  <joint name="joint_wheel_left" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_left"/>
    <origin xyz="${base_length/4} ${wheel_separation/3} -${chassis_height/2}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>

  <!-- Right Wheel -->
  <link name="wheel_right">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="black"/>
      <origin rpy="${pi/2} 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <origin rpy="${pi/2} 0 0"/>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
              iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>

  <joint name="joint_wheel_right" type="continuous">
    <parent link="base_link"/>
    <child link="wheel_right"/>
    <origin xyz="${base_length/4} -${wheel_separation/3} -${chassis_height/2}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>

  <!-- Passive Back Wheels (caster) -->
  <link name="caster_wheel">
    <visual>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
               iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>

  <joint name="joint_caster" type="fixed">
    <parent link="base_link"/>
    <child link="caster_wheel"/>
    <origin xyz="-${base_length/2} 0 -0.025" rpy="0 0 0"/>
  </joint>

  <!-- Plugins -->
  <gazebo reference="laser_link">
    <sensor type="ray" name="laser_sensor">
      <alwaysOn>true</alwaysOn>						      <!-- Keep sensor active -->
      <update_rate>20</update_rate>					    <!-- Publish at 20 Hz -->
      <visualize>true</visualize>						    <!-- Show beams in Gazebo -->
      <topicName>scan</topicName>						    <!-- ROS topic for LaserScan -->
      <pose>0 0 0 0 0 0</pose>						      <!-- Sensor pose relative to link -->
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>					    <!-- Number of beams -->
            <resolution>1</resolution>				  <!-- Subdivisions between beams -->
            <min_angle>-3.1416</min_angle>      <!-- -180 gradi in radianti -->
            <max_angle>3.1416</max_angle>       <!-- +180 gradi in radianti -->
          </horizontal>
        </scan>
        <range>
          <min>0.12</min>						            <!-- Minimum detect distance (m) -->
          <max>2.0</max>						            <!-- Maximum detect distance (m) -->
          <resolution>0.01</resolution>				  <!-- Range resolution (m) -->
        </range>
        <noise>
          <type>gaussian</type>					        <!-- Noise model type -->
          <mean>0.0</mean>						          <!-- Mean of noise -->
          <stddev>0.01</stddev>					        <!-- Standard deviation of noise -->
        </noise>
      </ray>
      <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>					    <!-- Same ROS topic name -->
        <frameName>laser_link</frameName>				<!-- Laser data frame -->
      </plugin>
    </sensor>
  </gazebo>

  <gazebo>
    <plugin name="diff_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <ros>
        <namespace>/</namespace>					                      <!-- ROS namespace -->
        <remapping>odom:=/odom</remapping>				              <!-- Remap /odom topic -->
        <remapping>cmd_vel:=/cmd_vel</remapping>			          <!-- Remap /cmd_vel topic -->
      </ros>
      <publishOdom>true</publishOdom>					                  <!-- Publish odometry messages -->
      <publishTf>true</publishTf>						                    <!-- Publish TF transforms -->
      <publishOdomTF>true</publishOdomTF>				                <!-- Publish odom->base_link TF -->
      <publishWheelTF>false</publishWheelTF>				            <!-- No wheel TF broadcast -->
      <commandTimeout>1.0</commandTimeout>				              <!-- Stop if no cmd_vel after 1s -->
      <updateRate>50.0</updateRate>					                    <!-- Plugin update frequency (Hz) -->
      <wheelTorque>5.0</wheelTorque>					                  <!-- Max torque on wheels -->
      <wheelAcceleration>0.0</wheelAcceleration>				        <!-- Max wheel acceleration (0=unlimited) -->
      <wheelDiameter>${2 * wheel_radius}</wheelDiameter>			  <!-- Wheel diameter (m) -->
      <wheelSeparation>${wheel_separation}</wheelSeparation>		<!-- Distance between wheels (m) -->
      <robotBaseFrame>base_link</robotBaseFrame>				        <!-- Robot's main reference frame -->
      <odometryFrame>odom</odometryFrame>					              <!-- Frame for odom data -->
      <odometryTopic>odom</odometryTopic>					              <!-- Topic for odom data -->
      <commandTopic>cmd_vel</commandTopic>					            <!-- Topic for velocity cmds -->
      <publishWheelJointState>true</publishWheelJointState>			<!-- Publish wheel joint states -->
      <leftJoint>joint_wheel_left</leftJoint>				            <!-- Name of the left joint -->
      <rightJoint>joint_wheel_right</rightJoint>				        <!-- Name of the right joint -->
      <rosDebugLevel>INFO</rosDebugLevel>					              <!-- Debug level -->
    </plugin>
  </gazebo>
</robot>